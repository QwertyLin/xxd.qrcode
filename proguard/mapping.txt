cn.xxd.qr.AboutA -> cn.xxd.qr.AboutA:
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
cn.xxd.qr.AboutA$1 -> cn.xxd.qr.a:
    cn.xxd.qr.AboutA this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
cn.xxd.qr.CaptureA -> cn.xxd.qr.CaptureA:
    java.lang.String TAG -> a
    com.google.zxing.client.android.camera.CameraManager cameraManager -> b
    com.google.zxing.client.android.CaptureActivityHandler handler -> c
    com.google.zxing.client.android.ViewfinderView viewfinderView -> d
    boolean hasSurface -> e
    com.google.zxing.client.android.BeepManager beepManager -> f
    cn.xxd.qr.CaptureA2 homeA -> g
    com.google.zxing.client.android.ViewfinderView getViewfinderView() -> a
    android.os.Handler getHandler() -> b
    com.google.zxing.client.android.camera.CameraManager getCameraManager() -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onResume() -> onResume
    void onPause() -> onPause
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void handleDecode(com.google.zxing.Result,android.graphics.Bitmap) -> a
    void initCamera(android.view.SurfaceHolder) -> a
    void displayFrameworkBugMessageAndExit() -> e
    void drawViewfinder() -> d
    com.google.zxing.client.android.CaptureActivityHandler access$0(cn.xxd.qr.CaptureA) -> a
    void access$1$1ce7e68d(cn.xxd.qr.CaptureA) -> b
    com.google.zxing.client.android.camera.CameraManager access$2(cn.xxd.qr.CaptureA) -> c
cn.xxd.qr.CaptureA$1 -> cn.xxd.qr.b:
    cn.xxd.qr.CaptureA this$0 -> a
    void run() -> run
cn.xxd.qr.CaptureA2 -> cn.xxd.qr.c:
    android.app.Activity mAct -> a
    com.google.zxing.client.android.camera.CameraManager mCameraMgr -> b
    android.widget.ImageButton vLight -> c
    void setCameraManager(com.google.zxing.client.android.camera.CameraManager) -> a
    void onCreate() -> a
    void onWindowFocusChanged() -> b
    void onFindQrCode(android.graphics.Bitmap,java.lang.String) -> a
    void onClick(android.view.View) -> onClick
    android.app.Activity access$0(cn.xxd.qr.CaptureA2) -> a
cn.xxd.qr.CaptureA2$1 -> cn.xxd.qr.d:
    cn.xxd.qr.CaptureA2 this$0 -> a
    android.graphics.Bitmap val$barcodeImg -> b
    cn.xxd.qr.bean.QrCode val$qrcode -> c
    void run() -> run
cn.xxd.qr.HistoryA -> cn.xxd.qr.HistoryA:
    java.util.List datas -> a
    cn.xxd.qr.adapter.HistoryAdapter adapter -> b
    int page -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onEndlessListViewBackground() -> a
    void onEndlessListViewSuccess() -> b
    void onClick(android.view.View) -> onClick
    java.util.List access$0(cn.xxd.qr.HistoryA) -> a
    cn.xxd.qr.adapter.HistoryAdapter access$1(cn.xxd.qr.HistoryA) -> b
cn.xxd.qr.HistoryA$1 -> cn.xxd.qr.e:
    cn.xxd.qr.HistoryA this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
    cn.xxd.qr.HistoryA access$0(cn.xxd.qr.HistoryA$1) -> a
cn.xxd.qr.HistoryA$1$1 -> cn.xxd.qr.f:
    cn.xxd.qr.HistoryA$1 this$1 -> a
    void run() -> run
    cn.xxd.qr.HistoryA$1 access$0(cn.xxd.qr.HistoryA$1$1) -> a
cn.xxd.qr.HistoryA$1$1$1 -> cn.xxd.qr.g:
    cn.xxd.qr.HistoryA$1$1 this$2 -> a
    void run() -> run
cn.xxd.qr.HomeA -> cn.xxd.qr.HomeA:
    boolean GO_TO_SCAN -> a
    boolean FINISH_FROM_SCAN -> b
    void onCreate(android.os.Bundle) -> onCreate
    android.content.Intent getIntent(int) -> a
    java.lang.String getBtnText(int) -> b
    int getBtnDrawable(int) -> c
cn.xxd.qr.MainA -> cn.xxd.qr.MainA:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
cn.xxd.qr.NewA -> cn.xxd.qr.NewA:
    java.lang.String DEFAULT_TEXT -> a
    int mColor -> b
    java.lang.String mText -> c
    long time -> d
    android.graphics.Bitmap qrBitmap -> e
    android.widget.TextView vText -> f
    android.widget.ImageView vImg -> g
    android.app.AlertDialog dialogColor -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void encode() -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    void access$0(cn.xxd.qr.NewA,java.lang.String) -> a
    java.lang.String access$1(cn.xxd.qr.NewA) -> a
    java.lang.String access$2() -> a
    android.widget.TextView access$3(cn.xxd.qr.NewA) -> b
    void access$4(cn.xxd.qr.NewA) -> c
    int access$5(cn.xxd.qr.NewA) -> d
    android.widget.ImageView access$6(cn.xxd.qr.NewA) -> e
    android.graphics.Bitmap access$7(cn.xxd.qr.NewA) -> f
    void access$8(cn.xxd.qr.NewA,android.graphics.Bitmap) -> a
cn.xxd.qr.NewA$1 -> cn.xxd.qr.h:
    cn.xxd.qr.NewA this$0 -> a
    android.widget.EditText val$et -> b
    void onClick(android.content.DialogInterface,int) -> onClick
cn.xxd.qr.NewA$2 -> cn.xxd.qr.i:
    cn.xxd.qr.NewA this$0 -> a
    void run() -> run
    cn.xxd.qr.NewA access$0(cn.xxd.qr.NewA$2) -> a
cn.xxd.qr.NewA$2$1 -> cn.xxd.qr.j:
    cn.xxd.qr.NewA$2 this$1 -> a
    android.graphics.Bitmap val$bmTemp -> b
    void run() -> run
cn.xxd.qr.QrCodeA -> cn.xxd.qr.QrCodeA:
    android.graphics.Bitmap SCAN_BITMAP -> a
    cn.xxd.qr.bean.QrCode qrcode -> b
    cn.xxd.qr.QrCodeA$State state -> c
    android.graphics.Bitmap buildBitmap -> d
    q.util.FileMgr fileMgr -> e
    android.widget.ImageView ivImage -> f
    int[] $SWITCH_TABLE$com$google$zxing$client$result$ParsedResultType -> g
    void onCreate(android.os.Bundle) -> onCreate
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onClick(android.view.View) -> onClick
    void onClickBack() -> a
    int[] $SWITCH_TABLE$com$google$zxing$client$result$ParsedResultType() -> b
    cn.xxd.qr.bean.QrCode access$1(cn.xxd.qr.QrCodeA) -> a
    android.widget.ImageView access$2(cn.xxd.qr.QrCodeA) -> b
    void access$3(cn.xxd.qr.QrCodeA,android.graphics.Bitmap) -> a
    android.graphics.Bitmap access$4(cn.xxd.qr.QrCodeA) -> c
cn.xxd.qr.QrCodeA$1 -> cn.xxd.qr.k:
    cn.xxd.qr.QrCodeA this$0 -> a
    void run() -> run
    cn.xxd.qr.QrCodeA access$0(cn.xxd.qr.QrCodeA$1) -> a
cn.xxd.qr.QrCodeA$1$1 -> cn.xxd.qr.l:
    cn.xxd.qr.QrCodeA$1 this$1 -> a
    android.graphics.Bitmap val$bm -> b
    void run() -> run
cn.xxd.qr.QrCodeA$2 -> cn.xxd.qr.m:
    cn.xxd.qr.QrCodeA this$0 -> a
    java.io.File val$imageFile -> b
    void run() -> run
    cn.xxd.qr.QrCodeA access$0(cn.xxd.qr.QrCodeA$2) -> a
cn.xxd.qr.QrCodeA$2$1 -> cn.xxd.qr.n:
    cn.xxd.qr.QrCodeA$2 this$1 -> a
    android.graphics.Bitmap val$bm -> b
    void run() -> run
cn.xxd.qr.QrCodeA$3 -> cn.xxd.qr.o:
    cn.xxd.qr.QrCodeA this$0 -> a
    void run() -> run
    cn.xxd.qr.QrCodeA access$0(cn.xxd.qr.QrCodeA$3) -> a
cn.xxd.qr.QrCodeA$3$1 -> cn.xxd.qr.p:
    cn.xxd.qr.QrCodeA$3 this$1 -> a
    void run() -> run
cn.xxd.qr.QrCodeA$State -> cn.xxd.qr.q:
    cn.xxd.qr.QrCodeA$State IMAGE_SCAN -> a
    cn.xxd.qr.QrCodeA$State IMAGE_SRC -> b
    cn.xxd.qr.QrCodeA$State IMAGE_BUILD -> c
    cn.xxd.qr.QrCodeA$State[] ENUM$VALUES -> d
    cn.xxd.qr.QrCodeA$State[] values() -> values
    cn.xxd.qr.QrCodeA$State valueOf(java.lang.String) -> valueOf
cn.xxd.qr.ScanA -> cn.xxd.qr.ScanA:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
cn.xxd.qr.ScanA$1 -> cn.xxd.qr.r:
    cn.xxd.qr.ScanA this$0 -> a
    void run() -> run
    cn.xxd.qr.ScanA access$0(cn.xxd.qr.ScanA$1) -> a
cn.xxd.qr.ScanA$1$1 -> cn.xxd.qr.s:
    cn.xxd.qr.ScanA$1 this$1 -> a
    void run() -> run
cn.xxd.qr.adapter.HistoryAdapter -> cn.xxd.qr.a.a:
    java.lang.Object getHolder(android.view.View) -> a
    void initItem$51f9981a(java.lang.Object,java.lang.Object) -> a
cn.xxd.qr.adapter.HistoryAdapter$Holder -> cn.xxd.qr.a.b:
    android.widget.TextView tvText -> a
    android.widget.TextView tvTime -> b
    cn.xxd.qr.adapter.HistoryAdapter this$0 -> c
cn.xxd.qr.bean.HistoryDb -> cn.xxd.qr.b.a:
    java.lang.String getSqlCreateTable() -> a
    java.util.List queryAll(int) -> a
    android.content.ContentValues buildContentValues(q.util.SqliteBase$ISqlite) -> a
cn.xxd.qr.bean.QrCode -> cn.xxd.qr.b.b:
    long id -> a
    java.lang.String text -> b
    long time -> c
    java.lang.String timeStr -> d
    long getId() -> a
    void setId(long) -> a
    java.lang.String getText() -> b
    void setText(java.lang.String) -> a
    long getTime() -> c
    void setTime(long) -> b
    java.lang.String getTimeStr() -> d
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
cn.xxd.qr.service.AboutService -> cn.xxd.qr.c.a:
    void checkUpdate(android.content.Context) -> a
cn.xxd.qr.service.AboutService$1 -> cn.xxd.qr.c.b:
    android.content.Context val$ctx -> a
    void run() -> run
cn.xxd.qr.service.QrCodeEncodeService -> cn.xxd.qr.c.c:
    android.graphics.Bitmap encode(android.content.Context,java.lang.String,int) -> a
cn.xxd.qr.util.QSp -> cn.xxd.qr.d.a:
    java.lang.String getUpdateUrl(android.content.Context) -> a
cn.xxd.qr.view.CaptureMenuTextView -> cn.xxd.qr.view.CaptureMenuTextView:
    int ROTATION -> a
    int width -> b
    int height -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
cn.xxd.qr.view.RotateImageView -> cn.xxd.qr.view.RotateImageView:
    int ROTATION -> a
    int width -> b
    int height -> c
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
com.baidu.mobstat.SendStrategyEnum -> com.baidu.mobstat.a:
    com.baidu.mobstat.SendStrategyEnum APP_START -> a
    com.baidu.mobstat.SendStrategyEnum ONCE_A_DAY -> b
    com.baidu.mobstat.SendStrategyEnum SET_TIME_INTERVAL -> c
    com.baidu.mobstat.SendStrategyEnum[] a -> d
    com.baidu.mobstat.SendStrategyEnum[] values() -> values
    com.baidu.mobstat.SendStrategyEnum valueOf(java.lang.String) -> valueOf
com.baidu.mobstat.StatActivity -> com.baidu.mobstat.StatActivity:
    void onResume() -> onResume
    void onPause() -> onPause
com.baidu.mobstat.StatService -> com.baidu.mobstat.b:
    boolean a -> a
    boolean a(java.lang.Class,java.lang.String) -> a
    void onResume(android.content.Context) -> a
    void onPause(android.content.Context) -> b
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String) -> a
com.baidu.mobstat.a -> com.baidu.mobstat.c:
    com.baidu.mobstat.a a -> a
    java.lang.Thread$UncaughtExceptionHandler b -> b
    android.content.Context c -> c
    com.baidu.mobstat.a a() -> a
    void a(android.content.Context) -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    org.json.JSONArray b(android.content.Context) -> b
com.baidu.mobstat.a.a -> com.baidu.mobstat.a.a:
    java.net.Proxy a -> a
    java.net.Proxy b -> b
    java.lang.String a$9e52333(android.content.Context,java.lang.String) -> a
    void a$31d7acc9(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> f
    byte[] b(android.content.Context,java.lang.String) -> g
    boolean c(android.content.Context,java.lang.String) -> b
    boolean a(java.lang.String) -> a
    java.net.HttpURLConnection a$16486542(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
    boolean e(android.content.Context,java.lang.String) -> e
com.baidu.mobstat.a.b -> com.baidu.mobstat.a.b:
    java.text.SimpleDateFormat a -> a
    void b$16da05f7() -> a
    boolean a(int) -> a
    int a(java.lang.String) -> a
    int a(java.lang.Throwable) -> a
    int a(java.lang.Object[]) -> a
    int a(java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.Throwable) -> a
    java.lang.String c(java.lang.Object[]) -> c
    int b(java.lang.Object[]) -> b
    int b(java.lang.String) -> b
com.baidu.mobstat.b -> com.baidu.mobstat.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    int p -> p
    org.json.JSONObject q -> q
    org.json.JSONArray r -> r
    org.json.JSONArray s -> s
    org.json.JSONArray t -> t
    org.json.JSONArray u -> u
    boolean v -> v
    com.baidu.mobstat.b w -> w
    com.baidu.mobstat.b a() -> a
    void a(org.json.JSONObject,boolean) -> a
    void c(java.lang.String) -> a
    void b(org.json.JSONObject,boolean) -> b
    void a(java.lang.String,java.lang.String,int,long) -> a
    void c(org.json.JSONObject,boolean) -> c
    void a(long,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b() -> b
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void a(android.content.Context,boolean) -> a
    boolean c() -> c
com.baidu.mobstat.c -> com.baidu.mobstat.e:
    android.os.HandlerThread a -> a
    android.os.Handler b -> b
    com.baidu.mobstat.c c -> c
    com.baidu.mobstat.c a() -> a
    void a$7555e5c(android.content.Context,java.lang.String,java.lang.String) -> a
com.baidu.mobstat.d -> com.baidu.mobstat.f:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    android.content.Context d -> d
    com.baidu.mobstat.c e -> e
    void run() -> run
com.baidu.mobstat.e -> com.baidu.mobstat.g:
    com.baidu.mobstat.e a -> a
    boolean b -> b
    com.baidu.mobstat.e a() -> a
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
com.baidu.mobstat.f -> com.baidu.mobstat.h:
    com.baidu.mobstat.f a -> a
    android.content.Context b -> b
    boolean c -> c
    boolean d -> d
    com.baidu.mobstat.f a() -> a
    void a(android.content.Context) -> a
    boolean b() -> b
    void e() -> d
    boolean c() -> c
    void run() -> run
com.baidu.mobstat.g -> com.baidu.mobstat.i:
    android.os.HandlerThread a -> a
    boolean b -> b
    com.baidu.mobstat.SendStrategyEnum c -> c
    int d -> d
    java.util.Timer e -> e
    int f -> f
    boolean g -> g
    android.os.Handler h -> h
    com.baidu.mobstat.g i -> i
    android.content.SharedPreferences a(android.content.Context) -> a
    com.baidu.mobstat.g a() -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void d(android.content.Context) -> d
    void e(android.content.Context) -> e
    boolean a(com.baidu.mobstat.g,boolean) -> a
    boolean a(com.baidu.mobstat.g) -> a
    java.util.Timer b(com.baidu.mobstat.g) -> b
    java.util.Timer a$484a62da(com.baidu.mobstat.g) -> c
    com.baidu.mobstat.SendStrategyEnum a(com.baidu.mobstat.g,com.baidu.mobstat.SendStrategyEnum) -> a
    int a(com.baidu.mobstat.g,int) -> a
    boolean b(com.baidu.mobstat.g,boolean) -> b
    com.baidu.mobstat.SendStrategyEnum c(com.baidu.mobstat.g) -> d
    boolean d(com.baidu.mobstat.g) -> e
    int e(com.baidu.mobstat.g) -> f
    android.os.Handler b() -> b
com.baidu.mobstat.h -> com.baidu.mobstat.j:
    android.content.Context a -> a
    com.baidu.mobstat.g b -> b
    void run() -> run
com.baidu.mobstat.i -> com.baidu.mobstat.k:
    com.baidu.mobstat.h a -> a
    void run() -> run
com.baidu.mobstat.j -> com.baidu.mobstat.l:
    android.content.Context a -> a
    com.baidu.mobstat.g b -> b
    void run() -> run
com.baidu.mobstat.k -> com.baidu.mobstat.m:
    long b -> b
    long c -> c
    int d -> d
    java.util.List a -> a
    long a() -> a
    void b(long) -> a
    void b() -> b
    org.json.JSONObject c() -> c
    void a(int) -> a
    int d() -> d
com.baidu.mobstat.l -> com.baidu.mobstat.n:
    java.lang.String b -> b
    long c -> c
    com.baidu.mobstat.k a -> a
    java.lang.String a() -> a
    long b() -> b
com.baidu.mobstat.m -> com.baidu.mobstat.o:
    android.os.HandlerThread a -> a
    android.os.Handler b -> b
    long c -> c
    long d -> d
    java.lang.ref.WeakReference e -> e
    com.baidu.mobstat.k f -> f
    com.baidu.mobstat.m g -> g
    boolean h -> h
    boolean i -> i
    com.baidu.mobstat.m a() -> a
    void a(android.content.Context,long) -> a
    void b(android.content.Context,long) -> b
    void b() -> b
    long c() -> c
    com.baidu.mobstat.k a(com.baidu.mobstat.m) -> a
    void a$35d3b8b4(android.content.Context) -> a
    void a(com.baidu.mobstat.m,android.content.Context,long) -> a
com.baidu.mobstat.n -> com.baidu.mobstat.p:
    com.baidu.mobstat.m a -> a
    void run() -> run
com.baidu.mobstat.o -> com.baidu.mobstat.q:
    long b -> b
    java.lang.ref.WeakReference c -> c
    long d -> d
    java.lang.ref.WeakReference e -> e
    com.baidu.mobstat.m a -> a
    void run() -> run
com.baidu.mobstat.p -> com.baidu.mobstat.r:
    long b -> b
    long c -> c
    java.lang.ref.WeakReference d -> d
    com.baidu.mobstat.m a -> a
    void run() -> run
com.baidu.mobstat.q -> com.baidu.mobstat.s:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    int a(android.content.Context) -> a
    int b(android.content.Context) -> b
    int c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    java.lang.String a$54b88759(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    java.lang.String h(android.content.Context) -> h
    android.util.DisplayMetrics j(android.content.Context) -> i
com.google.zxing.BarcodeFormat -> com.google.zxing.a:
    com.google.zxing.BarcodeFormat QR_CODE -> a
    com.google.zxing.BarcodeFormat[] ENUM$VALUES -> b
    com.google.zxing.BarcodeFormat[] values() -> values
    com.google.zxing.BarcodeFormat valueOf(java.lang.String) -> valueOf
com.google.zxing.Binarizer -> com.google.zxing.b:
    com.google.zxing.LuminanceSource source -> a
    com.google.zxing.LuminanceSource getLuminanceSource() -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
com.google.zxing.BinaryBitmap -> com.google.zxing.c:
    com.google.zxing.Binarizer binarizer -> a
    com.google.zxing.common.BitMatrix matrix -> b
    com.google.zxing.common.BitMatrix getBlackMatrix() -> a
com.google.zxing.ChecksumException -> com.google.zxing.d:
    com.google.zxing.ChecksumException instance -> a
    com.google.zxing.ChecksumException getChecksumInstance() -> a
com.google.zxing.DecodeHintType -> com.google.zxing.e:
    com.google.zxing.DecodeHintType OTHER -> a
    com.google.zxing.DecodeHintType PURE_BARCODE -> b
    com.google.zxing.DecodeHintType TRY_HARDER -> c
    com.google.zxing.DecodeHintType ALLOWED_LENGTHS -> d
    com.google.zxing.DecodeHintType ASSUME_CODE_39_CHECK_DIGIT -> e
    com.google.zxing.DecodeHintType NEED_RESULT_POINT_CALLBACK -> f
    com.google.zxing.DecodeHintType[] ENUM$VALUES -> g
    com.google.zxing.DecodeHintType[] values() -> values
    com.google.zxing.DecodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.EncodeHintType -> com.google.zxing.f:
    com.google.zxing.EncodeHintType ERROR_CORRECTION -> a
    com.google.zxing.EncodeHintType CHARACTER_SET -> b
    com.google.zxing.EncodeHintType MARGIN -> c
    com.google.zxing.EncodeHintType PDF417_COMPACT -> d
    com.google.zxing.EncodeHintType PDF417_COMPACTION -> e
    com.google.zxing.EncodeHintType PDF417_DIMENSIONS -> f
    com.google.zxing.EncodeHintType[] ENUM$VALUES -> g
    com.google.zxing.EncodeHintType[] values() -> values
    com.google.zxing.EncodeHintType valueOf(java.lang.String) -> valueOf
com.google.zxing.FormatException -> com.google.zxing.g:
    com.google.zxing.FormatException instance -> a
    com.google.zxing.FormatException getFormatInstance() -> a
com.google.zxing.LuminanceSource -> com.google.zxing.h:
    int width -> a
    int height -> b
    byte[] getRow(int,byte[]) -> a
    byte[] getMatrix() -> a
    int getWidth() -> b
    int getHeight() -> c
    java.lang.String toString() -> toString
com.google.zxing.MultiFormatReader -> com.google.zxing.i:
    java.util.Map hints -> a
    com.google.zxing.Reader readers -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    com.google.zxing.Result decodeWithState(com.google.zxing.BinaryBitmap) -> a
    void setHints(java.util.Map) -> a
    void reset() -> a
    com.google.zxing.Result decodeInternal(com.google.zxing.BinaryBitmap) -> b
com.google.zxing.MultiFormatWriter -> com.google.zxing.j:
    int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat -> a
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> a
    int[] $SWITCH_TABLE$com$google$zxing$BarcodeFormat() -> a
com.google.zxing.NotFoundException -> com.google.zxing.k:
    com.google.zxing.NotFoundException instance -> a
    com.google.zxing.NotFoundException getNotFoundInstance() -> a
com.google.zxing.PlanarYUVLuminanceSource -> com.google.zxing.l:
    byte[] yuvData -> a
    int dataWidth -> b
    int dataHeight -> c
    int left -> d
    int top -> e
    byte[] getRow(int,byte[]) -> a
    byte[] getMatrix() -> a
    int[] renderCroppedGreyscaleBitmap() -> d
com.google.zxing.Reader -> com.google.zxing.m:
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
com.google.zxing.ReaderException -> com.google.zxing.n:
    java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.google.zxing.Result -> com.google.zxing.o:
    java.lang.String text -> a
    byte[] rawBytes -> b
    com.google.zxing.ResultPoint[] resultPoints -> c
    com.google.zxing.BarcodeFormat format -> d
    java.util.Map resultMetadata -> e
    long timestamp -> f
    java.lang.String getText() -> a
    void putMetadata(com.google.zxing.ResultMetadataType,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.zxing.ResultMetadataType -> com.google.zxing.p:
    com.google.zxing.ResultMetadataType OTHER -> a
    com.google.zxing.ResultMetadataType ORIENTATION -> b
    com.google.zxing.ResultMetadataType BYTE_SEGMENTS -> c
    com.google.zxing.ResultMetadataType ERROR_CORRECTION_LEVEL -> d
    com.google.zxing.ResultMetadataType ISSUE_NUMBER -> e
    com.google.zxing.ResultMetadataType SUGGESTED_PRICE -> f
    com.google.zxing.ResultMetadataType POSSIBLE_COUNTRY -> g
    com.google.zxing.ResultMetadataType UPC_EAN_EXTENSION -> h
    com.google.zxing.ResultMetadataType[] ENUM$VALUES -> i
    com.google.zxing.ResultMetadataType[] values() -> values
    com.google.zxing.ResultMetadataType valueOf(java.lang.String) -> valueOf
com.google.zxing.ResultPoint -> com.google.zxing.q:
    float x -> a
    float y -> b
    float getX() -> a
    float getY() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    void orderBestPatterns(com.google.zxing.ResultPoint[]) -> a
    float distance(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
com.google.zxing.ResultPointCallback -> com.google.zxing.r:
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> a
com.google.zxing.Writer -> com.google.zxing.s:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> a
com.google.zxing.WriterException -> com.google.zxing.t:
com.google.zxing.client.android.BeepManager -> com.google.zxing.client.android.a:
    java.lang.String TAG -> a
    android.app.Activity activity -> b
    android.media.MediaPlayer mediaPlayer -> c
    boolean playBeep -> d
    boolean vibrate -> e
    void updatePrefs() -> a
    void playBeepSoundAndVibrate() -> b
    android.media.MediaPlayer buildMediaPlayer(android.content.Context) -> a
com.google.zxing.client.android.BeepManager$1 -> com.google.zxing.client.android.b:
    void onCompletion(android.media.MediaPlayer) -> onCompletion
com.google.zxing.client.android.CaptureActivityHandler -> com.google.zxing.client.android.c:
    java.lang.String TAG -> a
    cn.xxd.qr.CaptureA activity -> b
    com.google.zxing.client.android.DecodeThread decodeThread -> c
    com.google.zxing.client.android.CaptureActivityHandler$State state -> d
    com.google.zxing.client.android.camera.CameraManager cameraManager -> e
    void handleMessage(android.os.Message) -> handleMessage
    void quitSynchronously() -> a
com.google.zxing.client.android.CaptureActivityHandler$State -> com.google.zxing.client.android.d:
    com.google.zxing.client.android.CaptureActivityHandler$State PREVIEW -> a
    com.google.zxing.client.android.CaptureActivityHandler$State SUCCESS -> b
    com.google.zxing.client.android.CaptureActivityHandler$State DONE -> c
    com.google.zxing.client.android.CaptureActivityHandler$State[] ENUM$VALUES -> d
    com.google.zxing.client.android.CaptureActivityHandler$State[] values() -> values
    com.google.zxing.client.android.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
com.google.zxing.client.android.DecodeHandler -> com.google.zxing.client.android.e:
    java.lang.String TAG -> a
    cn.xxd.qr.CaptureA activity -> b
    com.google.zxing.MultiFormatReader multiFormatReader -> c
    boolean running -> d
    void handleMessage(android.os.Message) -> handleMessage
com.google.zxing.client.android.DecodeThread -> com.google.zxing.client.android.f:
    cn.xxd.qr.CaptureA activity -> a
    java.util.Map hints -> b
    android.os.Handler handler -> c
    java.util.concurrent.CountDownLatch handlerInitLatch -> d
    android.os.Handler getHandler() -> a
    void run() -> run
com.google.zxing.client.android.FinishListener -> com.google.zxing.client.android.g:
    android.app.Activity activityToFinish -> a
    void onCancel(android.content.DialogInterface) -> onCancel
    void onClick(android.content.DialogInterface,int) -> onClick
com.google.zxing.client.android.ViewfinderResultPointCallback -> com.google.zxing.client.android.h:
    com.google.zxing.client.android.ViewfinderView viewfinderView -> a
    void foundPossibleResultPoint(com.google.zxing.ResultPoint) -> a
com.google.zxing.client.android.ViewfinderView -> com.google.zxing.client.android.ViewfinderView:
    int[] SCANNER_ALPHA -> a
    com.google.zxing.client.android.camera.CameraManager cameraManager -> b
    android.graphics.Paint paint -> c
    int laserColor -> d
    int resultPointColor -> e
    int scannerAlpha -> f
    java.util.List possibleResultPoints -> g
    java.util.List lastPossibleResultPoints -> h
    void setCameraManager(com.google.zxing.client.android.camera.CameraManager) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawViewfinder() -> a
    void addPossibleResultPoint(com.google.zxing.ResultPoint) -> a
com.google.zxing.client.android.camera.AutoFocusManager -> com.google.zxing.client.android.a.a:
    java.lang.String TAG -> a
    java.util.Collection FOCUS_MODES_CALLING_AF -> b
    boolean active -> c
    boolean useAutoFocus -> d
    android.hardware.Camera camera -> e
    com.google.zxing.client.android.camera.AutoFocusManager$AutoFocusTask outstandingTask -> f
    com.google.zxing.client.android.common.executor.AsyncTaskExecInterface taskExec -> g
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    void start() -> a
    void stop() -> b
    boolean access$0(com.google.zxing.client.android.camera.AutoFocusManager) -> a
com.google.zxing.client.android.camera.AutoFocusManager$AutoFocusTask -> com.google.zxing.client.android.a.b:
    com.google.zxing.client.android.camera.AutoFocusManager this$0 -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.google.zxing.client.android.camera.CameraConfigurationManager -> com.google.zxing.client.android.a.c:
    android.content.Context context -> a
    android.graphics.Point screenResolution -> b
    android.graphics.Point cameraResolution -> c
    void initFromCameraParameters(android.hardware.Camera) -> a
    void setDesiredCameraParameters(android.hardware.Camera,boolean) -> a
    android.graphics.Point getCameraResolution() -> a
    android.graphics.Point getScreenResolution() -> b
    void setTorch(android.hardware.Camera,boolean) -> b
    void doSetTorch(android.hardware.Camera$Parameters,boolean) -> a
    android.graphics.Point findBestPreviewSizeValue(android.hardware.Camera$Parameters,android.graphics.Point) -> a
    java.lang.String findSettableValue(java.util.Collection,java.lang.String[]) -> a
com.google.zxing.client.android.camera.CameraConfigurationManager$1 -> com.google.zxing.client.android.a.d:
    com.google.zxing.client.android.camera.CameraConfigurationManager this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.client.android.camera.CameraManager -> com.google.zxing.client.android.a.e:
    java.lang.String TAG -> a
    android.content.Context context -> b
    com.google.zxing.client.android.camera.CameraConfigurationManager configManager -> c
    android.hardware.Camera camera -> d
    com.google.zxing.client.android.camera.AutoFocusManager autoFocusManager -> e
    android.graphics.Rect framingRect -> f
    android.graphics.Rect framingRectInPreview -> g
    boolean initialized -> h
    boolean previewing -> i
    int requestedFramingRectWidth -> j
    int requestedFramingRectHeight -> k
    com.google.zxing.client.android.camera.PreviewCallback previewCallback -> l
    void openDriver(android.view.SurfaceHolder) -> a
    boolean isOpen() -> a
    void closeDriver() -> b
    void startPreview() -> c
    void stopPreview() -> d
    void setTorch(boolean) -> a
    boolean getTorch() -> e
    void requestPreviewFrame$2a8797e(android.os.Handler) -> a
    android.graphics.Rect getFramingRect() -> f
    android.graphics.Rect getFramingRectInPreview() -> g
    void setManualFramingRect(int,int) -> a
    com.google.zxing.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> a
com.google.zxing.client.android.camera.PreviewCallback -> com.google.zxing.client.android.a.f:
    java.lang.String TAG -> a
    com.google.zxing.client.android.camera.CameraConfigurationManager configManager -> b
    android.os.Handler previewHandler -> c
    int previewMessage -> d
    void setHandler(android.os.Handler,int) -> a
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
com.google.zxing.client.android.camera.open.DefaultOpenCameraInterface -> com.google.zxing.client.android.a.a.a:
    android.hardware.Camera open() -> a
com.google.zxing.client.android.camera.open.OpenCameraInterface -> com.google.zxing.client.android.a.a.b:
    android.hardware.Camera open() -> a
com.google.zxing.client.android.camera.open.OpenCameraManager -> com.google.zxing.client.android.a.a.c:
com.google.zxing.client.android.common.PlatformSupportManager -> com.google.zxing.client.android.b.a:
    java.lang.String TAG -> a
    java.lang.Class managedInterface -> b
    java.lang.Object defaultImplementation -> c
    java.util.SortedMap implementations -> d
    void addImplementationClass(int,java.lang.String) -> a
    java.lang.Object build() -> a
com.google.zxing.client.android.common.executor.AsyncTaskExecInterface -> com.google.zxing.client.android.b.a.a:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> a
com.google.zxing.client.android.common.executor.AsyncTaskExecManager -> com.google.zxing.client.android.b.a.b:
com.google.zxing.client.android.common.executor.DefaultAsyncTaskExecInterface -> com.google.zxing.client.android.b.a.c:
    void execute(android.os.AsyncTask,java.lang.Object[]) -> a
com.google.zxing.client.android.pref.BSPlusPreference -> com.google.zxing.client.android.pref.BSPlusPreference:
    void configureClickListener() -> a
com.google.zxing.client.android.pref.BSPlusPreference$1 -> com.google.zxing.client.android.pref.a:
    com.google.zxing.client.android.pref.BSPlusPreference this$0 -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.google.zxing.client.result.AbstractDoCoMoResultParser -> com.google.zxing.client.a.a:
com.google.zxing.client.result.AddressBookAUResultParser -> com.google.zxing.client.a.b:
com.google.zxing.client.result.AddressBookDoCoMoResultParser -> com.google.zxing.client.a.c:
com.google.zxing.client.result.BizcardResultParser -> com.google.zxing.client.a.d:
com.google.zxing.client.result.BookmarkDoCoMoResultParser -> com.google.zxing.client.a.e:
com.google.zxing.client.result.EmailAddressResultParser -> com.google.zxing.client.a.f:
com.google.zxing.client.result.EmailDoCoMoResultParser -> com.google.zxing.client.a.g:
    java.util.regex.Pattern ATEXT_ALPHANUMERIC -> a
com.google.zxing.client.result.GeoResultParser -> com.google.zxing.client.a.h:
    java.util.regex.Pattern GEO_URL_PATTERN -> a
com.google.zxing.client.result.ParsedResult -> com.google.zxing.client.a.i:
    com.google.zxing.client.result.ParsedResultType type -> a
    com.google.zxing.client.result.ParsedResultType getType() -> a
    java.lang.String getDisplayResult() -> b
    java.lang.String toString() -> toString
    void maybeAppend(java.lang.String,java.lang.StringBuilder) -> a
com.google.zxing.client.result.ParsedResultType -> com.google.zxing.client.a.j:
    com.google.zxing.client.result.ParsedResultType ADDRESSBOOK -> a
    com.google.zxing.client.result.ParsedResultType EMAIL_ADDRESS -> b
    com.google.zxing.client.result.ParsedResultType PRODUCT -> c
    com.google.zxing.client.result.ParsedResultType URI -> d
    com.google.zxing.client.result.ParsedResultType TEXT -> e
    com.google.zxing.client.result.ParsedResultType GEO -> f
    com.google.zxing.client.result.ParsedResultType TEL -> g
    com.google.zxing.client.result.ParsedResultType SMS -> h
    com.google.zxing.client.result.ParsedResultType CALENDAR -> i
    com.google.zxing.client.result.ParsedResultType WIFI -> j
    com.google.zxing.client.result.ParsedResultType ISBN -> k
    com.google.zxing.client.result.ParsedResultType[] ENUM$VALUES -> l
    com.google.zxing.client.result.ParsedResultType[] values() -> values
    com.google.zxing.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
com.google.zxing.client.result.ResultParser -> com.google.zxing.client.a.k:
    com.google.zxing.client.result.ResultParser[] PARSERS -> a
    java.util.regex.Pattern DIGITS -> b
    java.util.regex.Pattern ALPHANUM -> c
    java.util.regex.Pattern AMPERSAND -> d
    java.util.regex.Pattern EQUALS -> e
    com.google.zxing.client.result.ParsedResult parseResult(java.lang.String) -> a
com.google.zxing.client.result.SMSMMSResultParser -> com.google.zxing.client.a.l:
com.google.zxing.client.result.SMSTOMMSTOResultParser -> com.google.zxing.client.a.m:
com.google.zxing.client.result.SMTPResultParser -> com.google.zxing.client.a.n:
com.google.zxing.client.result.TelResultParser -> com.google.zxing.client.a.o:
com.google.zxing.client.result.TextParsedResult -> com.google.zxing.client.a.p:
    java.lang.String text -> a
    java.lang.String language -> b
    java.lang.String getDisplayResult() -> b
com.google.zxing.client.result.URIParsedResult -> com.google.zxing.client.a.q:
    java.util.regex.Pattern USER_IN_HOST -> a
    java.lang.String uri -> b
    java.lang.String title -> c
    java.lang.String getDisplayResult() -> b
    boolean isColonFollowedByPortNumber(java.lang.String,int) -> a
com.google.zxing.client.result.URIResultParser -> com.google.zxing.client.a.r:
    java.util.regex.Pattern URL_WITH_PROTOCOL_PATTERN -> a
    java.util.regex.Pattern URL_WITHOUT_PROTOCOL_PATTERN -> b
    com.google.zxing.client.result.URIParsedResult parse(java.lang.String) -> b
com.google.zxing.client.result.URLTOResultParser -> com.google.zxing.client.a.s:
com.google.zxing.client.result.VCardResultParser -> com.google.zxing.client.a.t:
    java.util.regex.Pattern BEGIN_VCARD -> a
    java.util.regex.Pattern VCARD_LIKE_DATE -> b
    java.util.regex.Pattern CR_LF_SPACE_TAB -> c
    java.util.regex.Pattern NEWLINE_ESCAPE -> d
    java.util.regex.Pattern VCARD_ESCAPES -> e
    java.util.regex.Pattern EQUALS -> f
    java.util.regex.Pattern SEMICOLON -> g
    java.util.regex.Pattern UNESCAPED_SEMICOLONS -> h
com.google.zxing.client.result.VEventResultParser -> com.google.zxing.client.a.u:
com.google.zxing.client.result.WifiResultParser -> com.google.zxing.client.a.v:
com.google.zxing.common.BitArray -> com.google.zxing.a.a:
    int[] bits -> a
    int size -> b
    int getSize() -> a
    int getSizeInBytes() -> b
    void ensureCapacity(int) -> b
    boolean get(int) -> a
    void appendBit(boolean) -> a
    void appendBits(int,int) -> a
    void appendBitArray(com.google.zxing.common.BitArray) -> a
    void xor(com.google.zxing.common.BitArray) -> b
    void toBytes$101cc16b(int,byte[],int) -> a
    java.lang.String toString() -> toString
com.google.zxing.common.BitMatrix -> com.google.zxing.a.b:
    int width -> a
    int height -> b
    int rowSize -> c
    int[] bits -> d
    boolean get(int,int) -> a
    void set(int,int) -> b
    void flip(int,int) -> c
    void setRegion(int,int,int,int) -> a
    int[] getTopLeftOnBit() -> a
    int[] getBottomRightOnBit() -> b
    int getWidth() -> c
    int getHeight() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.google.zxing.common.BitSource -> com.google.zxing.a.c:
    byte[] bytes -> a
    int byteOffset -> b
    int bitOffset -> c
    int readBits(int) -> a
    int available() -> a
com.google.zxing.common.CharacterSetECI -> com.google.zxing.a.d:
    com.google.zxing.common.CharacterSetECI Cp437 -> a
    com.google.zxing.common.CharacterSetECI ISO8859_1 -> b
    com.google.zxing.common.CharacterSetECI ISO8859_2 -> c
    com.google.zxing.common.CharacterSetECI ISO8859_3 -> d
    com.google.zxing.common.CharacterSetECI ISO8859_4 -> e
    com.google.zxing.common.CharacterSetECI ISO8859_5 -> f
    com.google.zxing.common.CharacterSetECI ISO8859_6 -> g
    com.google.zxing.common.CharacterSetECI ISO8859_7 -> h
    com.google.zxing.common.CharacterSetECI ISO8859_8 -> i
    com.google.zxing.common.CharacterSetECI ISO8859_9 -> j
    com.google.zxing.common.CharacterSetECI ISO8859_10 -> k
    com.google.zxing.common.CharacterSetECI ISO8859_11 -> l
    com.google.zxing.common.CharacterSetECI ISO8859_13 -> m
    com.google.zxing.common.CharacterSetECI ISO8859_14 -> n
    com.google.zxing.common.CharacterSetECI ISO8859_15 -> o
    com.google.zxing.common.CharacterSetECI ISO8859_16 -> p
    com.google.zxing.common.CharacterSetECI SJIS -> q
    com.google.zxing.common.CharacterSetECI Cp1250 -> r
    com.google.zxing.common.CharacterSetECI Cp1251 -> s
    com.google.zxing.common.CharacterSetECI Cp1252 -> t
    com.google.zxing.common.CharacterSetECI Cp1256 -> u
    com.google.zxing.common.CharacterSetECI UnicodeBigUnmarked -> v
    com.google.zxing.common.CharacterSetECI UTF8 -> w
    com.google.zxing.common.CharacterSetECI ASCII -> x
    com.google.zxing.common.CharacterSetECI Big5 -> y
    com.google.zxing.common.CharacterSetECI GB18030 -> z
    com.google.zxing.common.CharacterSetECI EUC_KR -> A
    java.util.Map VALUE_TO_ECI -> B
    java.util.Map NAME_TO_ECI -> C
    int[] values -> D
    java.lang.String[] otherEncodingNames -> E
    com.google.zxing.common.CharacterSetECI[] ENUM$VALUES -> F
    int getValue() -> a
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByValue(int) -> a
    com.google.zxing.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> a
    com.google.zxing.common.CharacterSetECI[] values() -> values
    com.google.zxing.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
com.google.zxing.common.DecoderResult -> com.google.zxing.a.e:
    byte[] rawBytes -> a
    java.lang.String text -> b
    java.util.List byteSegments -> c
    java.lang.String ecLevel -> d
    byte[] getRawBytes() -> a
    java.lang.String getText() -> b
    java.util.List getByteSegments() -> c
    java.lang.String getECLevel() -> d
com.google.zxing.common.DefaultGridSampler -> com.google.zxing.a.f:
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> a
com.google.zxing.common.DetectorResult -> com.google.zxing.a.g:
    com.google.zxing.common.BitMatrix bits -> a
    com.google.zxing.ResultPoint[] points -> b
    com.google.zxing.common.BitMatrix getBits() -> a
    com.google.zxing.ResultPoint[] getPoints() -> b
com.google.zxing.common.GlobalHistogramBinarizer -> com.google.zxing.a.h:
    byte[] EMPTY -> a
    byte[] luminances -> b
    int[] buckets -> c
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
com.google.zxing.common.GridSampler -> com.google.zxing.a.i:
    com.google.zxing.common.GridSampler gridSampler -> a
    com.google.zxing.common.GridSampler getInstance() -> a
    com.google.zxing.common.BitMatrix sampleGrid(com.google.zxing.common.BitMatrix,int,int,com.google.zxing.common.PerspectiveTransform) -> a
com.google.zxing.common.HybridBinarizer -> com.google.zxing.a.j:
    com.google.zxing.common.BitMatrix matrix -> a
    com.google.zxing.common.BitMatrix getBlackMatrix() -> b
    int cap$4868d301(int,int) -> a
com.google.zxing.common.PerspectiveTransform -> com.google.zxing.a.k:
    float a11 -> a
    float a12 -> b
    float a13 -> c
    float a21 -> d
    float a22 -> e
    float a23 -> f
    float a31 -> g
    float a32 -> h
    float a33 -> i
    com.google.zxing.common.PerspectiveTransform quadrilateralToQuadrilateral$627f73af(float,float,float,float,float,float,float,float,float,float,float,float) -> a
    void transformPoints(float[]) -> a
    com.google.zxing.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> a
com.google.zxing.common.StringUtils -> com.google.zxing.a.l:
    java.lang.String PLATFORM_DEFAULT_ENCODING -> a
    boolean ASSUME_SHIFT_JIS -> b
    java.lang.String guessEncoding$7d98f549(byte[]) -> a
com.google.zxing.common.detector.MathUtils -> com.google.zxing.a.a.a:
    float distance(int,int,int,int) -> a
com.google.zxing.common.reedsolomon.GenericGF -> com.google.zxing.a.b.a:
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_12 -> a
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_10 -> b
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_6 -> c
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_PARAM -> d
    com.google.zxing.common.reedsolomon.GenericGF QR_CODE_FIELD_256 -> e
    com.google.zxing.common.reedsolomon.GenericGF DATA_MATRIX_FIELD_256 -> f
    com.google.zxing.common.reedsolomon.GenericGF AZTEC_DATA_8 -> g
    com.google.zxing.common.reedsolomon.GenericGF MAXICODE_FIELD_64 -> h
    int[] expTable -> i
    int[] logTable -> j
    com.google.zxing.common.reedsolomon.GenericGFPoly zero -> k
    com.google.zxing.common.reedsolomon.GenericGFPoly one -> l
    int size -> m
    int primitive -> n
    boolean initialized -> o
    void initialize() -> d
    void checkInit() -> e
    com.google.zxing.common.reedsolomon.GenericGFPoly getZero() -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly getOne() -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> a
    int addOrSubtract(int,int) -> b
    int exp(int) -> a
    int log(int) -> b
    int inverse(int) -> c
    int multiply(int,int) -> c
    int getSize() -> c
com.google.zxing.common.reedsolomon.GenericGFPoly -> com.google.zxing.a.b.b:
    com.google.zxing.common.reedsolomon.GenericGF field -> a
    int[] coefficients -> b
    int[] getCoefficients() -> a
    int getDegree() -> b
    boolean isZero() -> c
    int getCoefficient(int) -> a
    int evaluateAt(int) -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly addOrSubtract(com.google.zxing.common.reedsolomon.GenericGFPoly) -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(com.google.zxing.common.reedsolomon.GenericGFPoly) -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly multiply(int) -> c
    com.google.zxing.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> a
    com.google.zxing.common.reedsolomon.GenericGFPoly[] divide(com.google.zxing.common.reedsolomon.GenericGFPoly) -> c
    java.lang.String toString() -> toString
com.google.zxing.common.reedsolomon.ReedSolomonDecoder -> com.google.zxing.a.b.c:
    com.google.zxing.common.reedsolomon.GenericGF field -> a
    void decode(int[],int) -> a
com.google.zxing.common.reedsolomon.ReedSolomonEncoder -> com.google.zxing.a.b.d:
    com.google.zxing.common.reedsolomon.GenericGF field -> a
    java.util.List cachedGenerators -> b
    com.google.zxing.common.reedsolomon.GenericGFPoly buildGenerator(int) -> a
    void encode(int[],int) -> a
com.google.zxing.common.reedsolomon.ReedSolomonException -> com.google.zxing.a.b.e:
com.google.zxing.qrcode.QRCodeReader -> com.google.zxing.b.a:
    com.google.zxing.ResultPoint[] NO_POINTS -> a
    com.google.zxing.qrcode.decoder.Decoder decoder -> b
    com.google.zxing.Result decode(com.google.zxing.BinaryBitmap,java.util.Map) -> a
    void reset() -> a
com.google.zxing.qrcode.QRCodeWriter -> com.google.zxing.b.b:
    com.google.zxing.common.BitMatrix encode(java.lang.String,com.google.zxing.BarcodeFormat,int,int,java.util.Map) -> a
    com.google.zxing.common.BitMatrix renderResult(com.google.zxing.qrcode.encoder.QRCode,int,int,int) -> a
com.google.zxing.qrcode.decoder.BitMatrixParser -> com.google.zxing.b.a.a:
    com.google.zxing.common.BitMatrix bitMatrix -> a
    com.google.zxing.qrcode.decoder.Version parsedVersion -> b
    com.google.zxing.qrcode.decoder.FormatInformation parsedFormatInfo -> c
    com.google.zxing.qrcode.decoder.FormatInformation readFormatInformation() -> a
    com.google.zxing.qrcode.decoder.Version readVersion() -> b
    int copyBit(int,int,int) -> a
    byte[] readCodewords() -> c
com.google.zxing.qrcode.decoder.DataBlock -> com.google.zxing.b.a.b:
    int numDataCodewords -> a
    byte[] codewords -> b
    com.google.zxing.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    int getNumDataCodewords() -> a
    byte[] getCodewords() -> b
com.google.zxing.qrcode.decoder.DataMask -> com.google.zxing.b.a.c:
    com.google.zxing.qrcode.decoder.DataMask[] DATA_MASKS -> a
    void unmaskBitMatrix(com.google.zxing.common.BitMatrix,int) -> a
    boolean isMasked(int,int) -> a
    com.google.zxing.qrcode.decoder.DataMask forReference(int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask000 -> com.google.zxing.b.a.d:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask001 -> com.google.zxing.b.a.e:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask010 -> com.google.zxing.b.a.f:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask011 -> com.google.zxing.b.a.g:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask100 -> com.google.zxing.b.a.h:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask101 -> com.google.zxing.b.a.i:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask110 -> com.google.zxing.b.a.j:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DataMask$DataMask111 -> com.google.zxing.b.a.k:
    boolean isMasked(int,int) -> a
com.google.zxing.qrcode.decoder.DecodedBitStreamParser -> com.google.zxing.b.a.l:
    char[] ALPHANUMERIC_CHARS -> a
    com.google.zxing.common.DecoderResult decode$6fa0a788(byte[],com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    void decodeHanziSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> a
    void decodeKanjiSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> b
    void decodeByteSegment$6c70f3e1(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,com.google.zxing.common.CharacterSetECI,java.util.Collection) -> a
    char toAlphaNumericChar(int) -> a
    void decodeAlphanumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int,boolean) -> a
    void decodeNumericSegment(com.google.zxing.common.BitSource,java.lang.StringBuilder,int) -> c
com.google.zxing.qrcode.decoder.Decoder -> com.google.zxing.b.a.m:
    com.google.zxing.common.reedsolomon.ReedSolomonDecoder rsDecoder -> a
    com.google.zxing.common.DecoderResult decode$7a1b6c9(com.google.zxing.common.BitMatrix) -> a
com.google.zxing.qrcode.decoder.ErrorCorrectionLevel -> com.google.zxing.b.a.n:
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel L -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel M -> b
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel Q -> c
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel H -> d
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] FOR_BITS -> e
    int bits -> f
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] ENUM$VALUES -> g
    int getBits() -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.FormatInformation -> com.google.zxing.b.a.o:
    int[][] FORMAT_INFO_DECODE_LOOKUP -> a
    int[] BITS_SET_IN_HALF_BYTE -> b
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel -> c
    byte dataMask -> d
    int numBitsDiffering(int,int) -> a
    com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> b
    com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> c
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> a
    byte getDataMask() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.zxing.qrcode.decoder.Mode -> com.google.zxing.b.a.p:
    com.google.zxing.qrcode.decoder.Mode TERMINATOR -> a
    com.google.zxing.qrcode.decoder.Mode NUMERIC -> b
    com.google.zxing.qrcode.decoder.Mode ALPHANUMERIC -> c
    com.google.zxing.qrcode.decoder.Mode STRUCTURED_APPEND -> d
    com.google.zxing.qrcode.decoder.Mode BYTE -> e
    com.google.zxing.qrcode.decoder.Mode ECI -> f
    com.google.zxing.qrcode.decoder.Mode KANJI -> g
    com.google.zxing.qrcode.decoder.Mode FNC1_FIRST_POSITION -> h
    com.google.zxing.qrcode.decoder.Mode FNC1_SECOND_POSITION -> i
    com.google.zxing.qrcode.decoder.Mode HANZI -> j
    int[] characterCountBitsForVersions -> k
    int bits -> l
    com.google.zxing.qrcode.decoder.Mode[] ENUM$VALUES -> m
    com.google.zxing.qrcode.decoder.Mode forBits(int) -> a
    int getCharacterCountBits(com.google.zxing.qrcode.decoder.Version) -> a
    int getBits() -> a
    com.google.zxing.qrcode.decoder.Mode[] values() -> values
    com.google.zxing.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
com.google.zxing.qrcode.decoder.Version -> com.google.zxing.b.a.q:
    int[] VERSION_DECODE_INFO -> a
    com.google.zxing.qrcode.decoder.Version[] VERSIONS -> b
    int versionNumber -> c
    int[] alignmentPatternCenters -> d
    com.google.zxing.qrcode.decoder.Version$ECBlocks[] ecBlocks -> e
    int totalCodewords -> f
    int getVersionNumber() -> a
    int[] getAlignmentPatternCenters() -> b
    int getTotalCodewords() -> c
    int getDimensionForVersion() -> d
    com.google.zxing.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    com.google.zxing.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> a
    com.google.zxing.qrcode.decoder.Version getVersionForNumber(int) -> b
    com.google.zxing.qrcode.decoder.Version decodeVersionInformation(int) -> c
    com.google.zxing.common.BitMatrix buildFunctionPattern() -> e
    java.lang.String toString() -> toString
    com.google.zxing.qrcode.decoder.Version[] buildVersions() -> f
com.google.zxing.qrcode.decoder.Version$ECB -> com.google.zxing.b.a.r:
    int count -> a
    int dataCodewords -> b
    int getCount() -> a
    int getDataCodewords() -> b
com.google.zxing.qrcode.decoder.Version$ECBlocks -> com.google.zxing.b.a.s:
    int ecCodewordsPerBlock -> a
    com.google.zxing.qrcode.decoder.Version$ECB[] ecBlocks -> b
    int getECCodewordsPerBlock() -> a
    int getNumBlocks() -> b
    int getTotalECCodewords() -> c
    com.google.zxing.qrcode.decoder.Version$ECB[] getECBlocks() -> d
com.google.zxing.qrcode.detector.AlignmentPattern -> com.google.zxing.b.b.a:
    float estimatedModuleSize -> a
    boolean aboutEquals(float,float,float) -> a
    com.google.zxing.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> b
com.google.zxing.qrcode.detector.AlignmentPatternFinder -> com.google.zxing.b.b.b:
    com.google.zxing.common.BitMatrix image -> a
    java.util.List possibleCenters -> b
    int startX -> c
    int startY -> d
    int width -> e
    int height -> f
    float moduleSize -> g
    int[] crossCheckStateCount -> h
    com.google.zxing.ResultPointCallback resultPointCallback -> i
    com.google.zxing.qrcode.detector.AlignmentPattern find() -> a
    float centerFromEnd(int[],int) -> a
    boolean foundPatternCross(int[]) -> a
    com.google.zxing.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> a
com.google.zxing.qrcode.detector.Detector -> com.google.zxing.b.b.c:
    com.google.zxing.common.BitMatrix image -> a
    com.google.zxing.ResultPointCallback resultPointCallback -> b
    com.google.zxing.common.DetectorResult detect(java.util.Map) -> a
    com.google.zxing.common.DetectorResult processFinderPatternInfo(com.google.zxing.qrcode.detector.FinderPatternInfo) -> a
    float calculateModuleSizeOneWay(com.google.zxing.ResultPoint,com.google.zxing.ResultPoint) -> a
    float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> a
    float sizeOfBlackWhiteBlackRun(int,int,int,int) -> b
com.google.zxing.qrcode.detector.FinderPattern -> com.google.zxing.b.b.d:
    float estimatedModuleSize -> a
    int count -> b
    float getEstimatedModuleSize() -> c
    int getCount() -> d
    boolean aboutEquals(float,float,float) -> a
    com.google.zxing.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> b
com.google.zxing.qrcode.detector.FinderPatternFinder -> com.google.zxing.b.b.e:
    com.google.zxing.common.BitMatrix image -> a
    java.util.List possibleCenters -> b
    boolean hasSkipped -> c
    int[] crossCheckStateCount -> d
    com.google.zxing.ResultPointCallback resultPointCallback -> e
    com.google.zxing.qrcode.detector.FinderPatternInfo find(java.util.Map) -> a
    float centerFromEnd(int[],int) -> a
    boolean foundPatternCross(int[]) -> a
    int[] getCrossCheckStateCount() -> a
    boolean handlePossibleCenter(int[],int,int) -> a
    boolean haveMultiplyConfirmedCenters() -> b
com.google.zxing.qrcode.detector.FinderPatternFinder$CenterComparator -> com.google.zxing.b.b.f:
    float average -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.google.zxing.b.b.g:
    float average -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.google.zxing.qrcode.detector.FinderPatternInfo -> com.google.zxing.b.b.h:
    com.google.zxing.qrcode.detector.FinderPattern bottomLeft -> a
    com.google.zxing.qrcode.detector.FinderPattern topLeft -> b
    com.google.zxing.qrcode.detector.FinderPattern topRight -> c
    com.google.zxing.qrcode.detector.FinderPattern getBottomLeft() -> a
    com.google.zxing.qrcode.detector.FinderPattern getTopLeft() -> b
    com.google.zxing.qrcode.detector.FinderPattern getTopRight() -> c
com.google.zxing.qrcode.encoder.BlockPair -> com.google.zxing.b.c.a:
    byte[] dataBytes -> a
    byte[] errorCorrectionBytes -> b
    byte[] getDataBytes() -> a
    byte[] getErrorCorrectionBytes() -> b
com.google.zxing.qrcode.encoder.ByteMatrix -> com.google.zxing.b.c.b:
    byte[][] bytes -> a
    int width -> b
    int height -> c
    int getHeight() -> a
    int getWidth() -> b
    byte get(int,int) -> a
    byte[][] getArray() -> c
    void set(int,int,int) -> a
    void set(int,int,boolean) -> a
    void clear$132be7() -> d
    java.lang.String toString() -> toString
com.google.zxing.qrcode.encoder.Encoder -> com.google.zxing.b.c.c:
    int[] ALPHANUMERIC_TABLE -> a
    int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode -> b
    com.google.zxing.qrcode.encoder.QRCode encode(java.lang.String,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> a
    int getAlphanumericCode(int) -> a
    boolean isOnlyDoubleByteKanji(java.lang.String) -> a
    int chooseMaskPattern(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    com.google.zxing.qrcode.decoder.Version chooseVersion(int,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    void terminateBits(int,com.google.zxing.common.BitArray) -> a
    com.google.zxing.common.BitArray interleaveWithECBytes(com.google.zxing.common.BitArray,int,int,int) -> a
    byte[] generateECBytes(byte[],int) -> a
    int[] $SWITCH_TABLE$com$google$zxing$qrcode$decoder$Mode() -> a
com.google.zxing.qrcode.encoder.MaskUtil -> com.google.zxing.b.c.d:
    int applyMaskPenaltyRule1(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    int applyMaskPenaltyRule1Internal(com.google.zxing.qrcode.encoder.ByteMatrix,boolean) -> a
com.google.zxing.qrcode.encoder.MatrixUtil -> com.google.zxing.b.c.e:
    int[][] POSITION_DETECTION_PATTERN -> a
    int[][] POSITION_ADJUSTMENT_PATTERN -> b
    int[][] POSITION_ADJUSTMENT_PATTERN_COORDINATE_TABLE -> c
    int[][] TYPE_INFO_COORDINATES -> d
    void buildMatrix(com.google.zxing.common.BitArray,com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,com.google.zxing.qrcode.decoder.Version,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void maybeEmbedVersionInfo(com.google.zxing.qrcode.decoder.Version,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void embedDataBits(com.google.zxing.common.BitArray,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    int findMSBSet(int) -> a
    int calculateBCHCode(int,int) -> a
    boolean isEmpty(int) -> b
    void embedHorizontalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> a
    void embedVerticalSeparationPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> b
    void embedPositionDetectionPattern(int,int,com.google.zxing.qrcode.encoder.ByteMatrix) -> c
com.google.zxing.qrcode.encoder.QRCode -> com.google.zxing.b.c.f:
    com.google.zxing.qrcode.decoder.Mode mode -> a
    com.google.zxing.qrcode.decoder.ErrorCorrectionLevel ecLevel -> b
    com.google.zxing.qrcode.decoder.Version version -> c
    int maskPattern -> d
    com.google.zxing.qrcode.encoder.ByteMatrix matrix -> e
    com.google.zxing.qrcode.encoder.ByteMatrix getMatrix() -> a
    java.lang.String toString() -> toString
    void setMode(com.google.zxing.qrcode.decoder.Mode) -> a
    void setECLevel(com.google.zxing.qrcode.decoder.ErrorCorrectionLevel) -> a
    void setVersion(com.google.zxing.qrcode.decoder.Version) -> a
    void setMaskPattern(int) -> a
    void setMatrix(com.google.zxing.qrcode.encoder.ByteMatrix) -> a
q.base.ActivityBase -> q.base.ActivityBase:
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onPause() -> onPause
q.base.AdapterBase -> q.base.a:
    java.util.List mDatas -> a
    android.content.Context mCtx -> b
    android.view.LayoutInflater mInflater -> c
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getHolder(android.view.View) -> a
    void initItem$51f9981a(java.lang.Object,java.lang.Object) -> a
q.base.TabActivityBase -> q.base.TabActivityBase:
    android.widget.RadioGroup radioGroup -> c
    android.widget.TabHost tabHost -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    android.content.Intent getIntent(int) -> a
    java.lang.String getBtnText(int) -> b
    int getBtnDrawable(int) -> c
q.util.AppUtil -> q.a.a:
    java.lang.String getChannel(android.content.Context) -> a
q.util.BitmapUtil -> q.a.b:
    boolean save(android.graphics.Bitmap,java.lang.String) -> a
q.util.FileMgr -> q.a.c:
    q.util.FileMgr nInstance -> a
    java.lang.String nRoot -> b
    q.util.FileMgr getInstance(android.content.Context) -> a
    java.lang.String get(java.lang.String) -> a
    java.lang.String getScan(long) -> a
    java.lang.String getNew(long) -> b
q.util.IntentUtil -> q.a.d:
    void openBrowser(android.content.Context,java.lang.String) -> a
    void sendImage(android.content.Context,java.lang.String,java.lang.String) -> a
q.util.QHttpUtil -> q.a.e:
    java.lang.String get(java.lang.String) -> a
    java.lang.String get(java.lang.String,java.lang.String) -> a
    javax.net.ssl.HttpsURLConnection initHttpsConn(java.net.URL) -> a
q.util.QHttpUtil$1 -> q.a.f:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
q.util.QHttpUtil$2 -> q.a.g:
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
q.util.QLog -> q.a.h:
    boolean available -> a
    void event(android.content.Context,int,java.lang.String) -> a
    void kv(java.lang.Object,java.lang.String,java.lang.String,java.lang.String) -> a
    void kv(java.lang.Object,java.lang.String,java.lang.String,int) -> a
    void kv(java.lang.Object,java.lang.String,java.lang.String,float) -> a
    void log(java.lang.Object,java.lang.String) -> a
q.util.SqliteBase -> q.a.i:
    android.database.sqlite.SQLiteDatabase db -> a
    java.lang.String tableName -> b
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void open(boolean) -> a
    void close() -> close
    void insert(q.util.SqliteBase$ISqlite) -> b
    void empty() -> b
    java.lang.String getSqlCreateTable() -> a
    android.content.ContentValues buildContentValues(q.util.SqliteBase$ISqlite) -> a
q.util.SqliteBase$ISqlite -> q.a.j:
q.util.WindowMgr -> q.a.k:
    q.util.WindowMgr nInstance -> a
    int nWidth -> b
    int nHeight -> c
    int nDpi -> d
    float nScale -> e
    float nScaleRes -> f
    float nScaleText -> g
    q.util.WindowMgr getInstance(android.content.Context) -> a
    int getHeight() -> a
q.util.WindowUtil -> q.a.l:
    int nWidth -> a
    int nHeight -> b
    int getWidth(android.content.Context) -> a
    int getHeight(android.content.Context) -> b
q.view.EndlessListViewHelper -> q.b.a:
    q.view.EndlessListViewHelper$OnEndlessListViewListener mListener -> a
    android.widget.ListView mListView -> b
    android.view.View mViewFooter -> c
    boolean mIsEnable -> d
    boolean mIsDoing -> e
    android.os.Handler mHandler -> f
    void setEnable(boolean) -> a
    q.view.EndlessListViewHelper$OnEndlessListViewListener access$0(q.view.EndlessListViewHelper) -> a
    android.widget.ListView access$1(q.view.EndlessListViewHelper) -> b
    android.view.View access$2(q.view.EndlessListViewHelper) -> c
    void access$3(q.view.EndlessListViewHelper,boolean) -> a
    boolean access$4(q.view.EndlessListViewHelper) -> d
    boolean access$5(q.view.EndlessListViewHelper) -> e
    android.os.Handler access$6(q.view.EndlessListViewHelper) -> f
q.view.EndlessListViewHelper$1 -> q.b.b:
    q.view.EndlessListViewHelper this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
q.view.EndlessListViewHelper$2 -> q.b.c:
    q.view.EndlessListViewHelper this$0 -> a
    q.view.EndlessListViewHelper$OnEndlessListViewListener val$listener -> b
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    q.view.EndlessListViewHelper access$0(q.view.EndlessListViewHelper$2) -> a
q.view.EndlessListViewHelper$2$1 -> q.b.d:
    q.view.EndlessListViewHelper$2 this$1 -> a
    q.view.EndlessListViewHelper$OnEndlessListViewListener val$listener -> b
    void run() -> run
q.view.EndlessListViewHelper$OnEndlessListViewListener -> q.b.e:
    boolean onEndlessListViewBackground() -> a
    void onEndlessListViewSuccess() -> b
